define("orion/editor/stylers/text_x-erlang/syntax",["orion/editor/stylers/lib/syntax"],function(e){var n=["xor","when","try","rem","receive","query","orelse","or","of","not","let","if","fun","end","div","cond","catch","case","bxor","bsr","bsl","bor","bnot","begin","band","andalso","and","after"],i=["vsn","undef","type","spec","record","on_load","opaque","module","include_lib","include","import","ifndef","ifdef","file","export_type","export","endif","else","define","callback","compile","behaviour"],o=[];return o.push.apply(o,e.grammars),o.push({id:"orion.erlang",contentTypes:["text/x-erlang"],patterns:[{include:"#comment"},{include:"#stringSingleLine"},{include:"#stringMultiLine"},{include:"#method"},{include:"orion.lib#brace_open"},{include:"orion.lib#brace_close"},{include:"orion.lib#bracket_open"},{include:"orion.lib#bracket_close"},{include:"orion.lib#parenthesis_open"},{include:"orion.lib#parenthesis_close"},{include:"orion.lib#operator"},{include:"orion.lib#number_decimal"},{match:"\\b(?:"+n.join("|")+")\\b",name:"keyword.operator.erlang"},{match:"^\\s*-(?:"+i.join("|")+")\\b",name:"keyword.operator.erlang"}],repository:{comment:{match:{match:"%.*",literal:"%"},name:"comment.line.erlang",patterns:[{include:"orion.lib#todo_comment_singleLine"}]},method:{match:"(^|\\s)[a-zA-Z0-9_.]+(?=\\(|\\s\\()",name:"entity.name.function.erlang"},stringMultiLine:{begin:'"(?:\\\\.|[^\\\\"])*$',end:'^(?:\\\\.|[^\\\\"])*"',name:"string.quoted.double.erlang"},stringSingleLine:{match:'"(?:\\\\.|[^\\\\"])*"',name:"string.quoted.double.erlang"}}}),{id:o[o.length-1].id,grammars:o,keywords:n}});