define("orion/editor/stylers/text_x-python/syntax",["orion/editor/stylers/lib/syntax"],function(e){var n=["and","as","assert","break","class","continue","def","del","exec","elif","else","except","Ellipsis","False","finally","for","from","global","if","import","in","is","lambda","not","None","NotImplemented","or","pass","print","raise","return","try","True","while","with","yield"],i=[];return i.push.apply(i,e.grammars),i.push({id:"orion.python",contentTypes:["text/x-python"],patterns:[{begin:"(['\"])\\1\\1",end:"\\1\\1\\1",name:"string.quoted.triple.python"},{include:"orion.lib#string_doubleQuote"},{include:"orion.lib#string_singleQuote"},{begin:{match:"#",literal:"#"},end:{match:"$",literal:""},name:"comment.line.number-sign.python",patterns:[{include:"orion.lib#todo_comment_singleLine"}]},{include:"orion.lib#brace_open"},{include:"orion.lib#brace_close"},{include:"orion.lib#bracket_open"},{include:"orion.lib#bracket_close"},{include:"orion.lib#parenthesis_open"},{include:"orion.lib#parenthesis_close"},{include:"orion.lib#operator"},{include:"#number_decimal"},{include:"orion.lib#number_hex"},{match:"\\b(?:"+n.join("|")+")\\b",name:"keyword.operator.python"}],repository:{number_decimal:{match:"\\b-?(?:\\.\\d+|\\d+\\.?\\d*)[lL]?\\b",name:"constant.numeric.number.python"}}}),{id:i[i.length-1].id,grammars:i,keywords:n}});